nil (do (set! *warn-on-reflection* nil) (require (quote cljsbuild.compiler) (quote cljsbuild.crossover) (quote cljsbuild.util) (quote clj-stacktrace.repl) (quote clojure.java.io) (quote figwheel.core)) (try (do (do (clojure.core/letfn [(copy-crossovers__20629__auto__ [] (cljsbuild.crossover/copy-crossovers "/home/severin/go/src/github.com/mswift42/reacdays/webapp/target/cljsbuild-crossover" (quote [])))] (clojure.core/when (clojure.core/not-empty (quote [])) (copy-crossovers__20629__auto__) (cljsbuild.util/once-every-bg 1000 "copying crossovers" copy-crossovers__20629__auto__)) (clojure.core/let [crossover-macro-paths__20630__auto__ (cljsbuild.crossover/crossover-macro-paths (quote [])) build__20631__auto__ (clojure.core/first (quote ({:parsed-notify-command {:shell ()}, :id :app, :source-paths ["src" "dev"], :jar false, :notify-command nil, :incremental true, :assert true, :compiler {:source-map "resources/public/js/out.js.map", :output-dir "resources/public/js/out", :output-to "resources/public/js/app.js", :optimizations :none, :warnings true, :externs ["closure-js/externs"], :libs ["closure-js/libs"], :pretty-print true}}))) cljs-paths__20632__auto__ (:source-paths build__20631__auto__) compiler-options__20633__auto__ (:compiler build__20631__auto__) compiler-env__20634__auto__ (cljs.env/default-compiler-env compiler-options__20633__auto__) change-server__20635__auto__ (figwheel.core/start-server {:http-server-root "public", :port 3449, :output-to "resources/public/js/app.js", :output-dir "resources/public/js/out", :js-dirs ["resources/public/js/out" "resources/public/js/app.js"], :resource-paths ["/home/severin/go/src/github.com/mswift42/reacdays/webapp/dev-resources" "/home/severin/go/src/github.com/mswift42/reacdays/webapp/resources"], :root "/home/severin/go/src/github.com/mswift42/reacdays/webapp"})] (clojure.core/letfn [(get-mtimes__20636__auto__ [paths__20637__auto__] (clojure.core/into {} (clojure.core/map (clojure.core/fn [path__20638__auto__] [path__20638__auto__ (.lastModified (clojure.java.io/file path__20638__auto__))]) paths__20637__auto__))) (get-dependency-mtimes__20639__auto__ [] (clojure.core/let [macro-files__20640__auto__ (clojure.core/map :absolute crossover-macro-paths__20630__auto__) clj-files-in-cljs-paths__20641__auto__ (clojure.core/into {} (clojure.core/for [cljs-path__20642__auto__ cljs-paths__20632__auto__] [cljs-path__20642__auto__ (cljsbuild.util/find-files cljs-path__20642__auto__ #{"clj"})])) cljs-files__20643__auto__ (clojure.core/mapcat (fn* [p1__20625__20644__auto__] (cljsbuild.util/find-files p1__20625__20644__auto__ #{"cljs"})) (if "/home/severin/go/src/github.com/mswift42/reacdays/webapp/target/cljsbuild-crossover" (clojure.core/conj cljs-paths__20632__auto__ "/home/severin/go/src/github.com/mswift42/reacdays/webapp/target/cljsbuild-crossover") cljs-paths__20632__auto__)) lib-paths__20645__auto__ (:libs compiler-options__20633__auto__) js-files__20646__auto__ (clojure.core/->> (clojure.core/or lib-paths__20645__auto__ []) (clojure.core/mapcat (fn* [p1__20626__20647__auto__] (cljsbuild.util/find-files p1__20626__20647__auto__ #{"js"}))) (clojure.core/remove (fn* [p1__20627__20648__auto__] (.startsWith p1__20627__20648__auto__ (:output-dir compiler-options__20633__auto__)))) (clojure.core/remove (fn* [p1__20628__20649__auto__] (.endsWith p1__20628__20649__auto__ (:output-to compiler-options__20633__auto__))))) macro-mtimes__20650__auto__ (get-mtimes__20636__auto__ macro-files__20640__auto__) clj-mtimes__20651__auto__ (get-mtimes__20636__auto__ (clojure.core/mapcat clojure.core/second clj-files-in-cljs-paths__20641__auto__)) cljs-mtimes__20652__auto__ (get-mtimes__20636__auto__ cljs-files__20643__auto__) js-mtimes__20653__auto__ (get-mtimes__20636__auto__ js-files__20646__auto__)] (clojure.core/merge macro-mtimes__20650__auto__ clj-mtimes__20651__auto__ cljs-mtimes__20652__auto__ js-mtimes__20653__auto__)))] (clojure.core/loop [dependency-mtimes__20654__auto__ {}] (clojure.core/let [new-dependency-mtimes__20655__auto__ (try (clojure.core/let [new-mtimes__20656__auto__ (clojure.core/binding [cljs.env/*compiler* compiler-env__20634__auto__] (cljsbuild.compiler/run-compiler (:source-paths build__20631__auto__) "/home/severin/go/src/github.com/mswift42/reacdays/webapp/target/cljsbuild-crossover" crossover-macro-paths__20630__auto__ (:compiler build__20631__auto__) (:parsed-notify-command build__20631__auto__) (:incremental build__20631__auto__) (:assert build__20631__auto__) dependency-mtimes__20654__auto__ false))] (clojure.core/when (clojure.core/not= dependency-mtimes__20654__auto__ new-mtimes__20656__auto__) (figwheel.core/check-for-changes change-server__20635__auto__ dependency-mtimes__20654__auto__ new-mtimes__20656__auto__)) new-mtimes__20656__auto__) (catch java.lang.Throwable e__20657__auto__ (clj-stacktrace.repl/pst+ e__20657__auto__) (figwheel.core/compile-error-occured change-server__20635__auto__ e__20657__auto__) (get-dependency-mtimes__20639__auto__)))] (figwheel.core/check-for-css-changes change-server__20635__auto__) (java.lang.Thread/sleep 100) (recur new-dependency-mtimes__20655__auto__))))))) (java.lang.System/exit 0)) (catch cljsbuild.test.TestsFailedException e__20623__auto__ (java.lang.System/exit 1)) (catch java.lang.Exception e__20623__auto__ (do (.printStackTrace e__20623__auto__) (java.lang.System/exit 1)))))